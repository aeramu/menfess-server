<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="BranchesTreeState">
    <expand>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="REMOTE_ROOT" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </expand>
    <select>
      <path>
        <item name="ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="LOCAL_ROOT" type="e8cecc67:BranchNodeDescriptor" />
        <item name="BRANCH:v2" type="e8cecc67:BranchNodeDescriptor" />
      </path>
    </select>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="84f82642-98a1-48ae-bf68-73d6330be686" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/api/graphql/schema.graphql" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/auth/repository/mongodb/mongodb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/database/mongodb/database.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/repository/mongodb/feedback/mongodb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/repository/mongodb/menfess/mongodb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/service/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/service/interface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/service/model.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/feedback/service/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/gateway/handler/graphql/graphql.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/gateway/resolver/authService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/gateway/resolver/userService.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/client/expo/expo.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/constants/error.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/repository/mongodb/mongodb.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/api.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/interface.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/model.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/model_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/service.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/notification/service/service_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/internal/user/constants/constants.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pkg/playground/playground.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/menfess-server.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/menfess-server.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/watcherTasks.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/watcherTasks.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Procfile" beforeDir="false" afterPath="$PROJECT_DIR$/Procfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/http/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/http/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/lambda/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/lambda/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/client/notification.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/client/notification/notification.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/client/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/client/user/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/constants/constants.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/constants/constants.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/mock/notification_client.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/mock/service.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/mock/user_client.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/service/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/service/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/service/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/service/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/service/model.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/service/model.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/auth/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/auth/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/gateway/resolver/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/gateway/resolver/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/gateway/resolver/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/gateway/resolver/post.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/gateway/resolver/resolver.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/gateway/resolver/resolver.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/gateway/resolver/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/gateway/resolver/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/gateway/server/graphql.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/post/client/notificationClient.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/post/client/notification/notification.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/post/repository/mongodb.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/post/repository/mongodb/mongodb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/post/service/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/post/service/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/post/service/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/post/service/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/post/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/post/service/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/user/repository/mongodb.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/user/repository/mongodb/mongodb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/user/service/api.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/user/service/api.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/user/service/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/user/service/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/user/service/model.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/user/service/model.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/user/service/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/user/service/service.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="/usr/lib/go" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="v1" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1jOl3ohabiLgFirVYkU4vyhNacT" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../nim-itb-scraper" />
    <property name="settings.editor.selected.configurable" value="watcher.settings" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/api/graphql" />
      <recent name="$PROJECT_DIR$/pkg/playground" />
      <recent name="$PROJECT_DIR$/internal/gateway/server/graphql" />
      <recent name="$PROJECT_DIR$/internal/feedback/repository/mongodb/feedback" />
      <recent name="$PROJECT_DIR$/internal/auth/client/user" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/user" />
      <recent name="$PROJECT_DIR$/room/repository" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.Test_service_SendNotification/success in github.com/aeramu/menfess-server/internal/notification/service">
    <configuration name="Test_service_AddPushToken in github.com/aeramu/menfess-server/internal/notification/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="menfess-server" />
      <working_directory value="$PROJECT_DIR$/internal/notification/service" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/aeramu/menfess-server/internal/notification/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_service_AddPushToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_service_RemovePushToken in github.com/aeramu/menfess-server/internal/notification/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="menfess-server" />
      <working_directory value="$PROJECT_DIR$/internal/notification/service" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/aeramu/menfess-server/internal/notification/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_service_RemovePushToken\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_service_SendNotification in github.com/aeramu/menfess-server/internal/notification/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="menfess-server" />
      <working_directory value="$PROJECT_DIR$/internal/notification/service" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/aeramu/menfess-server/internal/notification/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_service_SendNotification\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_service_SendNotification/error_send_to_push_service in github.com/aeramu/menfess-server/internal/notification/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="menfess-server" />
      <working_directory value="$PROJECT_DIR$/internal/notification/service" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/aeramu/menfess-server/internal/notification/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_service_SendNotification\E$/^\Qerror_send_to_push_service\E$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_service_SendNotification/success in github.com/aeramu/menfess-server/internal/notification/service" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="menfess-server" />
      <working_directory value="$PROJECT_DIR$/internal/notification/service" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/aeramu/menfess-server/internal/notification/service" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <pattern value="^\QTest_service_SendNotification\E$/^\Qsuccess\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.Test_service_SendNotification/success in github.com/aeramu/menfess-server/internal/notification/service" />
        <item itemvalue="Go Test.Test_service_SendNotification/error_send_to_push_service in github.com/aeramu/menfess-server/internal/notification/service" />
        <item itemvalue="Go Test.Test_service_SendNotification in github.com/aeramu/menfess-server/internal/notification/service" />
        <item itemvalue="Go Test.Test_service_RemovePushToken in github.com/aeramu/menfess-server/internal/notification/service" />
        <item itemvalue="Go Test.Test_service_AddPushToken in github.com/aeramu/menfess-server/internal/notification/service" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="v2" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>